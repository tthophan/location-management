export enum ERROR_CODES {
  NOT_FOUND = 'NOT_FOUND',
  INVALID_REQUEST = 'INVALID_REQUEST',
  FORBIDDEN = 'FORBIDDEN',
  UNAUTHORIZED = 'UNAUTHORIZED',
  INTERNAL_SERVER_ERROR = 'INTERNAL_SERVER_ERROR',
  CIRCUIT_BREAKER_REACH = 'CIRCUIT_BREAKER_REACH',
  RATE_LIMIT_EXCEEDED = 'RATE_LIMIT_EXCEEDED',
  SERVICE_UNAVAILABLE = 'SERVICE_UNAVAILABLE',

  PARENT_NOT_FOUND = 'Parent not found',
  CIRCULAR_REFERENCE = 'Circular refecence',
  LOCATION_NOT_FOUND = 'Location not found',
}

export const ERROR_MESSAGES: Record<ERROR_CODES, string> = {
  [ERROR_CODES.NOT_FOUND]: 'Not found',
  [ERROR_CODES.INVALID_REQUEST]: 'Invalid request',
  [ERROR_CODES.FORBIDDEN]: 'Forbidden',
  [ERROR_CODES.UNAUTHORIZED]: 'Unauthorized',
  [ERROR_CODES.INTERNAL_SERVER_ERROR]: 'Internal server error',
  [ERROR_CODES.CIRCUIT_BREAKER_REACH]: 'Circuit breaker reached',
  [ERROR_CODES.RATE_LIMIT_EXCEEDED]: 'Rate limit exceeded',
  [ERROR_CODES.SERVICE_UNAVAILABLE]: 'Service unavailable',

  [ERROR_CODES.PARENT_NOT_FOUND]: 'Parent not found',
  [ERROR_CODES.CIRCULAR_REFERENCE]: 'Circular refecence',
  [ERROR_CODES.LOCATION_NOT_FOUND]: 'Location not found',
};

export function getErorrMessage(errorCode: ERROR_CODES): string {
  return ERROR_MESSAGES[errorCode];
}
