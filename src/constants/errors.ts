export enum ERROR_CODES {
  VPN_SERVER_NOT_FOUND = 'VPN_SERVER_NOT_FOUND',
  INVALID_TOKEN = 'INVALID_TOKEN',
  CONSUMER_NOT_FOUND = 'CONSUMER_NOT_FOUND',
  CONSUMER_ALREADY_BLACKLISTED = 'CONSUMER_ALREADY_BLACKLISTED',
  CONSUMER_NOT_BLACKLISTED = 'CONSUMER_NOT_BLACKLISTED',
  NOT_FOUND = 'NOT_FOUND',
  INVALID_REQUEST = 'INVALID_REQUEST',
  FORBIDDEN = 'FORBIDDEN',
  UNAUTHORIZED = 'UNAUTHORIZED',
  INTERNAL_SERVER_ERROR = 'INTERNAL_SERVER_ERROR',
  CIRCUIT_BREAKER_REACH = 'CIRCUIT_BREAKER_REACH',
  RATE_LIMIT_EXCEEDED = 'RATE_LIMIT_EXCEEDED',
  SERVICE_UNAVAILABLE = 'SERVICE_UNAVAILABLE',
  ADMIN_NOT_FOUND = 'ADMIN_NOT_FOUND',
  INVALID_DOMAIN = 'INVALID_DOMAIN',
  SIGNATURE_VALIDATION_FAILED = 'SIGNATURE_VALIDATION_FAILED',
}

export const ERROR_MESSAGES: Record<ERROR_CODES, string> = {
  [ERROR_CODES.VPN_SERVER_NOT_FOUND]: 'VPN server not found',
  [ERROR_CODES.CONSUMER_NOT_FOUND]: 'Consumer not found',
  [ERROR_CODES.INVALID_TOKEN]: 'Invalid token',
  [ERROR_CODES.CONSUMER_ALREADY_BLACKLISTED]: 'Consumer already blacklisted',
  [ERROR_CODES.CONSUMER_NOT_BLACKLISTED]: 'Consumer not blacklisted',
  [ERROR_CODES.NOT_FOUND]: 'Not found',
  [ERROR_CODES.INVALID_REQUEST]: 'Invalid request',
  [ERROR_CODES.FORBIDDEN]: 'Forbidden',
  [ERROR_CODES.UNAUTHORIZED]: 'Unauthorized',
  [ERROR_CODES.INTERNAL_SERVER_ERROR]: 'Internal server error',
  [ERROR_CODES.CIRCUIT_BREAKER_REACH]: 'Circuit breaker reached',
  [ERROR_CODES.RATE_LIMIT_EXCEEDED]: 'Rate limit exceeded',
  [ERROR_CODES.SERVICE_UNAVAILABLE]: 'Service unavailable',
  [ERROR_CODES.ADMIN_NOT_FOUND]: 'Admin not found',
  [ERROR_CODES.INVALID_DOMAIN]: 'Invalid domain',
  [ERROR_CODES.SIGNATURE_VALIDATION_FAILED]: 'Signature validation failed',
};

export function getErorrMessage(errorCode: ERROR_CODES): string {
  return ERROR_MESSAGES[errorCode];
}
